// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  cartItem    CartItem[]

  @@map("products")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  address   String
  phone     String
  cart      Cart?
  order     Order[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("carts")
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  quantity  Int
  Order     Order?  @relation(fields: [orderId], references: [id])
  orderId   Int?

  @@map("cartitems")
}

model Order {
  id          Int         @id @default(autoincrement())
  orderDate   DateTime
  totalAmount Float
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  items       CartItem[]
  status      OrderStatus
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")

  @@map("orders")
}

enum OrderStatus {
  Processing
  Delivered
}
